name: 'Terraform CI/CD'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1  # Change this to your desired region

    - name: Terraform Init
      run: terraform init

    # - name: Terraform rm
    #   run: |        
    #     terraform state list
    #     terraform state rm 'module.k8s_resources.kubernetes_namespace.voice_app'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["redis-master"]'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["redis-replicas"]'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["voice-app-output"]'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["voice-app-uploads"]'
  
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.voice_app_uploads'
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.voice_app_output'
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.redis_master'
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.redis_replicas'


    # - name: Terraform Plan
    #   run: |
    #     echo "Using chart at: $CHART_PATH"
    #     terraform plan -out=tfplan -parallelism=200 -refresh=false

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   env:
    #     TF_LOG: DEBUG
    #   run: |
    #     terraform apply -auto-approve tfplan

 
    - name: Terraform Destroy
      run: |
        terraform  destroy -auto-approve